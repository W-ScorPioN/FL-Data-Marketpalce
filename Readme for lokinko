除了本来的FL代码之外（你肯定知道本来的怎么跑了），增加了几个之前跟你提到过的关于相似度检测的一些新的模块：

需要实现：
1. 基于余弦相似度的FL contribution代码
2. 投毒代码
3. 聚类模块

对应的几个文件：
1. ./cosine_similarity.py，基于余弦相似度方法，计算每个客户端对全局模型的贡献度；
2. ./utils/poison.py，对数据集进行投毒攻击，产生被污染的模型，通过设置poison_fraction控制投毒比例；
3. ./free-rider.py，向模型添加噪声来仿真free-rider方法，通过设置noise_level控制噪声等级；
4. ./aggregator.py，基于余弦相似度、欧氏距离、曼哈顿距离三种方法构建了一个聚合器，计算每个客户端对全局模型的贡献度，并绘制聚类图；（看了一下cka的实现方式，不是很好加在这个里面，之后昊哥可以让那个学妹看一下这块有没有必要融合在一块）

1,3,4都可以独立运行

2 只需要设置一下poison_fraction参数的值，就可以按照FL训练的方式进行训练，得到模型


